.container
  .forum-menu
    .forum-menu__categories
      = link_to 'Forums', forums_path, class: 'button'
      %span.forum-menu__button.dropdown{ data: { align: 'left' } }
        %a.button #{@post.forum.name}
        .dropdown-content.dropdown-content--wide.vertical-menu
          - @post.forums.each do |forum|
            - if forum == @post.forum
              = link_to forum.name, forum, class: 'vertical-menu__item vertical-menu__item--active'
            - else
              = link_to forum.name, forum, class: 'vertical-menu__item'

    .forum-menu__filters
      .button-group
        %a.button-group__item.button-group__item--active Latest
        %a.button-group__item Top
        %a.button-group__item Feed

  %h3 
    = @post.title

  - if params[:page].to_i < 2
    = render partial: 'post_box', locals: { post: @post.current }

  - @post.replies.each do |reply|
    = render partial: 'post_box', locals: { post: reply }

  - unless @post.replies.empty?
    .pagination.pagination--spaced
      = will_paginate @post.replies 
      .pagination-info
        = page_entries_info @post.replies, model: 'replies'

  - if policy(@post.new_reply).new?
    .boxed-group.new-reply
      .boxed-group__body
        .boxed-group__title.boxed-group__title--fluid Write new reply
        .alert.alert--error.hidden
          .errors
        = form_for [@post.forum, @post.current, @post.new_reply], remote: true do |f|
          = f.text_area :content, placeholder: 'Reply content in here...'
          = f.submit 'Reply', class: 'button button--primary'
